---
name: 'Terraform'
# Author:       Casey Sparks
# Date:         August 16, 2024
# Description:  Run `terraform validate` against new terraform configs.

on:
  pull_request:
    branches: ['main']
    paths: ['**/*.tf']
env:
  TF_VER: '1.9.8'                                                               # Increment to update.
jobs:
  terraform_validate:
    name: 'Terraform Validate'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
    strategy:
      matrix:
        work_dir:
          - 'tfstate_backend'
          - 'modules'
          - 'caseyspar.kz'
    defaults:
      run:
        working-directory: '${{ matrix.work_dir }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2
        with:
          fetch-depth: 0

      - name: 'Set up Terraform'
        uses: 'hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd' # v3.1.2
        with:
          terraform_version: '${{ env.TF_VER }}'

      - name: 'Initialize Terraform'
        run: 'terraform init -backend=false'

      - name: 'Validate Terraform configs.'
        run: 'terraform validate'

  terraform_fmt:
    name: 'Terraform Format'
    if: '${{ github.event_name }} == "pull_request"'
    runs-on: 'ubuntu-latest'
    needs: ['terraform_validate']
    permissions:
      contents: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2
        with:
          fetch-depth: 0

      - name: 'Set up Terraform'
        uses: 'hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd' # v3.1.2
        with:
          terraform_version: '${{ env.TF_VER }}'

      - name: 'terraform fmt'
        run: 'terraform fmt --recursive'

      - name: 'Import PGP identity'
        id: 'import_pgp'
        uses: 'crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5' # v6.2.0
        with:
          gpg_private_key: '${{ secrets.AUTO_SIGNING_KEY }}'
          passphrase: '${{ secrets.AUTO_SIGNING_KEY_PASSPHRASE }}'
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: 'Commit and push changes'
        uses: 'stefanzweifel/git-auto-commit-action@8621497c8c39c72f3e2a999a26b4ca1b5058a842' # v5.0.1
        with:
          commit_message: 'ci(terraform): Auto-reformatted Terraform configs.'
          commit_author: '${{ steps.import_pgp.outputs.name }} <${{ steps.import_pgp.outputs.email }}>'
          commit_user_email: '${{ steps.import_pgp.outputs.email }}'
          commit_user_name: '${{ steps.import_pgp.outputs.name }}'
          file_pattern: '*.tf'

  infracost_update_pr:
    name: 'Add Infracost breakdown to pull request'
    if: '${{ github.event_name }} == "pull_request"'
    runs-on: 'ubuntu-latest'
    needs: ['terraform_validate']
    permissions:
      contents: 'read'
      pull-requests: 'write'
    steps:
      - name: 'Setup Infracost'
        uses: 'infracost/actions/setup@e9d6e6cd65e168e76b0de50ff9957d2fe8bb1832' # v3.0.1
        with:
          api-key: '${{ secrets.INFRACOST_API_KEY }}'
          github-token: '${{ github.token }}'

      - name: 'Checkout'
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2
        with:
          fetch-depth: 0
          ref: '${{ github.event.pull_request.base.ref }}'

      - name: 'Generate Infracost baseline estimate'
        run: >
          infracost breakdown
            --config-file .infracost.yml
            --format json
            --out-file /tmp/infracost_base.json

      - name: 'Checkout pull request branch'
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2
        with:
          fetch-depth: 0

      - name: 'Generate Infracost diff'
        run: >
          infracost diff
            --config-file .infracost.yml
            --format json
            --compare-to /tmp/infracost_base.json
            --out-file /tmp/infracost_diff.json

      - name: 'Post Infracost diff to pull request'
        run: >
          infracost comment github
            --path /tmp/infracost_diff.json
            --repo ${{ github.repository }}
            --pull-request ${{ github.event.pull_request.number }}
            --github-token ${{ github.token }}
            --behavior hide-and-new

# HOLD ON THIS UNTIL READY FOR CI DEPLOYMENTS =================================
# terraform_plan:
#   name: 'Terraform Plan'
#   if: '${{ github.event_name }} == "pull_request"'
#   runs-on: 'ubuntu-latest'
#   needs:
#     - 'terraform_validate'
#     - 'infracost_update_pr'
#   permissions:
#     contents: 'write'
#   strategy:
#     matrix:
#       work_dir:
#         - './tfstate_backend'
#         - './caseyspar.kz'
#   defaults:
#     run:
#       working-directory: '${{ matrix.work_dir }}'
#   steps:
#     - name: 'Checkout'
#       uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2

#       with:
#         fetch-depth: 1

#     - name: 'Cache runner public IP'
#       run: 'echo "IP_ADDR=$(curl https://ipinfo.io/ip)" >> "${GITHUB_ENV}"'

#     - name: 'Log in to AWS CLI'
#       run: 'echo TODO'

#     - name: 'Set up Terraform'
#       uses: 'hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd' # v3.1.2
#       with:
#         terraform_version: '${{ env.TF_VER }}'

#     - name: 'Initialize Terraform.'
#       run: 'terraform init'

#     - name: 'Create Terraform plan'
#       run: 'terraform plan -out planfile'

#     - name: 'Post PR comment'
#       uses: 'borchero/terraform-plan-comment@872735c9f574898bcb14478f8d5503dc2bb6895c' # v2.0.2
#       with:
#         token: '${{ github.token }}'
#         planfile: 'planfile'

# terraform_apply:
#   name: 'Terraform Apply'
#   if: '${{ github.event_name }} == "push" && ${{ github.ref }} == "refs/heads/main"'
#   runs-on: 'ubuntu-latest'
#   needs: ['terraform_validate']
#   permissions:
#     contents: 'write'
#   strategy:
#     matrix:
#       work_dir:
#         - './tfstate_backend'
#         - './caseyspar.kz'
#   defaults:
#     run:
#       working-directory: '${{ matrix.work_dir }}'
#   steps:
#     - name: 'Checkout'
#       uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2
#       with:
#           fetch-depth: 0

#     - name: 'Log in to AWS CLI'
#       run: 'echo TODO'

#     - name: 'Set up Terraform'
#       uses: 'hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd' # v3.1.2
#       with:
#         terraform_version: '${{ env.TF_VER }}'

#     - name: 'Initialize Terraform'
#       run: 'terraform init'

#     - name: 'Apply Terraform configs'
#       id: 'apply'
#       run: 'terraform apply -auto-approve'
...
